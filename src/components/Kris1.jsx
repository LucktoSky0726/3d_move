/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/kris1.glb -o src/components/Kris1.jsx -r public 
*/

import React, { useEffect, useRef } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Kris({ animation, ...props }) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/models/kris1.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  console.log(actions)

    useEffect(() => {
      actions[animation]?.reset().fadeIn(0.24).play();
      return () => actions?.[animation]?.fadeOut(0.24);
    }, [animation]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <primitive object={nodes.kristoff_f2_model} />
          <group name="kristoff">
            <skinnedMesh name="kristoff_1" geometry={nodes.kristoff_1.geometry} material={materials.kristoffF2_skin_MAT} skeleton={nodes.kristoff_1.skeleton} />
            <skinnedMesh name="kristoff_2" geometry={nodes.kristoff_2.geometry} material={materials.kristoffF2_outfit_MAT} skeleton={nodes.kristoff_2.skeleton} />
            <skinnedMesh name="kristoff_3" geometry={nodes.kristoff_3.geometry} material={materials.kristoffF2_hair_MAT} skeleton={nodes.kristoff_3.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/kris1.glb')
